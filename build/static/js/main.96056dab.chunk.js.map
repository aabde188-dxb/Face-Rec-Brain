{"version":3,"sources":["components/navigation/navigation.js","components/logo/logo.js","components/imagelinkform/imagelinkform.js","components/facerecognition/facerecognition.js","components/rank/rank.js","components/signin/signin.js","components/register/register.js","App.js","serviceWorker.js","index.js","components/logo/horus.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","horus","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Register","onNameChange","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","displayFaceBox","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.96056dab.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n        if (isSignedIn) {\n            return (\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n                </nav>\n                );\n        } else {\n            return(\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <p onClick={() => onRouteChange('Signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n                </nav>\n                );    \n            }\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt'\nimport horus from './horus.png';\nimport './logo.css';\n\nconst Logo = () => {\n    return (\n        <div className= 'ma4 mt0'>\n            <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\n            <div className=\"Tilt-inner\"> \n                <img style={{paddingTop:'0px'}} alt ='logo' src={horus}/> \n            </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport './imagelinkform.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n           <p className='f3'>\n               {'This Magic FRB will detect faces in your pics, give it a try'}\n           </p>\n           <div className='center'>\n            <div className='center form pa4 br3 shadow-5'>\n                <input \n                className='f4 pa2 w-70 center' \n                type=\"text\" \n                onChange={onInputChange}\n                />\n                <button \n                className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n                onClick={onButtonSubmit}\n                > \n                Detect \n                </button>\n            </div>\n           </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './facerecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto'/>\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}> </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name} , your current entry count is...`}\n            </div>\n            <div className='white f1 '>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\n\nclass SignIn extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://tranquil-garden-17326.herokuapp.com/signin', {\n            method: 'post',\n            headers: { 'Content-Type':'application/json'},\n            body: JSON.stringify({\n            email: this.state.signInEmail,\n            password: this.state.signInPassword\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n          if(user.id){\n            this.props.loadUser(user);\n            this.props.onRouteChange('home');\n            }\n        })\n    }\n\n    render() {\n        const { onRouteChange } = this.props\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailChange}\n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\" \n                            name=\"password\"  \n                            id=\"password\"\n                            onChange={this.onPasswordChange}\n                            />\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input \n                        onClick={this.onSubmitSignIn}\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                        type=\"submit\" \n                        value=\"Sign in\"\n\n                        />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                        <p  onClick={()=>onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://tranquil-garden-17326.herokuapp.com/register', {\n            method: 'post',\n            headers: { 'Content-Type':'application/json'},\n            body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password,\n            name: this.state.name\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id) {\n                this.props.loadUser(user)\n                this.props.onRouteChange('home');\n            }\n        })\n    }\n\n    render (){\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"text\" \n                            name=\"name\"  \n                            id=\"name\"\n                            onChange={this.onNameChange}\n                            />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailChange}\n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\" \n                            name=\"password\"  \n                            id=\"password\"\n                            onChange={this.onPasswordChange}\n                            />\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input \n                        onClick={this.onSubmitSignIn}\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib pointer\" \n                        type=\"submit\" \n                        value=\"Register\"/>\n                        </div>\n                    </div>\n                </main>\n        </article>\n     \n        );\n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation';\nimport Logo from './components/logo/logo';\nimport ImageLinkForm from './components/imagelinkform/imagelinkform';\nimport FaceRecognition from './components/facerecognition/facerecognition';\nimport Rank from './components/rank/rank';\nimport Signin from './components/signin/signin';\nimport Register from './components/register/register';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 123,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n  }\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id, \n      name: data.name, \n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://tranquil-garden-17326.herokuapp.com/imageurl',{\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://tranquil-garden-17326.herokuapp.com/image',{\n            method: 'put',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count =>{\n            this.setState(Object.assign(this.state.user, { entries: count}))\n          }) \n          .catch(console.log)\n        }\n      this.displayFaceBox(this.calculateFaceLocation(response)) \n     })\n     .catch(err => console.log(err));\n  }\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState(initialState)\n  }else if (route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render(){\n  const { isSignedIn, imageUrl, box, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n        params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n         ? <div> \n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n         :   (\n            route === 'Signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/horus.6cd4ee81.png\";"],"sourceRoot":""}